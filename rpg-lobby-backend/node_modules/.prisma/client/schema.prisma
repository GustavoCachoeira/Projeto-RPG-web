generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int              @id @default(autoincrement())
  name      String
  email     String           @unique
  password  String
  role      String           @default("player") // "player" ou "master"
  createdAt DateTime         @default(now())
  lobbies   Lobby[]          @relation("MasterLobbies") // Lobbies onde é mestre
  invites   Invite[]         @relation("PlayerInvites") // Convites recebidos
  sheets    CharacterSheet[] // Fichas criadas pelo usuário
}

model Lobby {
  id        Int              @id @default(autoincrement())
  name      String
  masterId  Int
  master    User             @relation("MasterLobbies", fields: [masterId], references: [id])
  sheets    CharacterSheet[] // Fichas do lobby
  invites   Invite[] // Convites associados ao lobby
  createdAt DateTime         @default(now())
}

model CharacterSheet {
  id        Int      @id @default(autoincrement())
  playerId  Int
  lobbyId   Int
  player    User     @relation(fields: [playerId], references: [id])
  lobby     Lobby    @relation(fields: [lobbyId], references: [id])
  data      Json // Dados da ficha em formato JSON (flexível)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Invite {
  id        Int      @id @default(autoincrement())
  lobbyId   Int
  playerId  Int
  lobby     Lobby    @relation(fields: [lobbyId], references: [id])
  player    User     @relation("PlayerInvites", fields: [playerId], references: [id])
  status    String   @default("pending") // "pending", "accepted", "rejected"
  createdAt DateTime @default(now())
}
